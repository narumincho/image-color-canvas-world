/* eslint-disable @next/next/no-img-element */
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import React from "react";
import * as app from "firebase/app";
import * as firestore from "firebase/firestore";
import * as storage from "firebase/storage";

const initialize =
  (
    setFileNameList: (fileNameList: ReadonlyArray<string>) => void,
    storageInstance: storage.FirebaseStorage
  ) =>
  () => {
    const storageInstance = storage.getStorage(app.initializeApp({}));
    const ref = storage.ref(storageInstance, "images");

    storage.listAll(ref).then((k) => {
      console.log(
        "一覧を取得できた",
        setFileNameList(k.items.map((l) => l.name))
      );
    });

    setInterval(() => {
      storage.uploadString(
        storage.ref(storageInstance, "images/sample"),
        "okkkk?"
      );
      console.log("10秒に一回する処理!");
    }, 10000);
  };

const Home: NextPage = () => {
  const [fileNameList, setFileNameList] = React.useState<ReadonlyArray<string>>(
    []
  );
  const [storageInstance] = React.useState<storage.FirebaseStorage>(() =>
    storage.getStorage(app.initializeApp({}))
  );

  React.useEffect(() => {
    initialize(setFileNameList, storageInstance);
  }, [storageInstance]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <StyledDiv>背景色 オレンジになったかな</StyledDiv>
      <div>ファイル名たち{JSON.stringify(setFileNameList)}</div>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <img src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

const StyledDiv = ({
  children,
}: {
  readonly children: React.ReactElement | string;
}) => <div className={styles.bg}>{children}</div>;

export default Home;
